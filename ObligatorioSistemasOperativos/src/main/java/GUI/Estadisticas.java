/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import com.mycompany.obligatoriosistemasoperativos.EstadisticasUpdate;
import com.mycompany.obligatoriosistemasoperativos.Hardware;
import com.mycompany.obligatoriosistemasoperativos.PCB;
import com.mycompany.obligatoriosistemasoperativos.ProcessDetail;
import com.mycompany.obligatoriosistemasoperativos.Scheduler;
import java.util.LinkedList;
import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.TimeUnit;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author nmais
 */
public class Estadisticas extends javax.swing.JFrame {

    public static Scheduler scheduler;
    static DefaultTableModel modeloProcesosListos;
    static DefaultTableModel modeloProcesosBloqueados;
    private static final ScheduledExecutorService executor = Executors.newSingleThreadScheduledExecutor();

    /**
     * Creates new form Estadisticas
     */
    public Estadisticas() {
        initComponents();
        setearModeloTablas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tablaListos = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaBloqueados = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtMemoria = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        dashboardMenu = new javax.swing.JMenu();
        estadisticasMenu = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        tablaListos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tablaListos);

        tablaBloqueados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tablaBloqueados);

        jLabel1.setText("Memoria total en uso:");

        txtMemoria.setText("x%");

        jLabel3.setText("Listos");

        jLabel4.setText("Bloqueados");

        dashboardMenu.setText("Dashboard");
        dashboardMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dashboardMenuMouseClicked(evt);
            }
        });
        dashboardMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dashboardMenuActionPerformed(evt);
            }
        });
        jMenuBar1.add(dashboardMenu);

        estadisticasMenu.setText("Estadisticas");
        estadisticasMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                estadisticasMenuActionPerformed(evt);
            }
        });
        jMenuBar1.add(estadisticasMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 74, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(27, 27, 27)
                .addComponent(txtMemoria)
                .addGap(69, 69, 69))
            .addGroup(layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addComponent(jLabel3)
                .addGap(134, 134, 134)
                .addComponent(jLabel4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(60, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(txtMemoria))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addGap(26, 26, 26))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dashboardMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dashboardMenuActionPerformed
        this.setVisible(false);
        new Dashboard().setVisible(true);
    }//GEN-LAST:event_dashboardMenuActionPerformed

    private void estadisticasMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_estadisticasMenuActionPerformed

    }//GEN-LAST:event_estadisticasMenuActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        scheduler = Scheduler.GetInstance();
        cargarTablas();
        final EstadisticasUpdate estadisticasUpdate = new EstadisticasUpdate(this);
        executor.scheduleAtFixedRate(estadisticasUpdate, 1000, 1000, TimeUnit.MILLISECONDS);
    }//GEN-LAST:event_formWindowOpened

    private void dashboardMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dashboardMenuMouseClicked
        this.setVisible(false);
        new Dashboard().setVisible(true);
    }//GEN-LAST:event_dashboardMenuMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Estadisticas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Estadisticas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Estadisticas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Estadisticas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Estadisticas().setVisible(true);
            }
        });
    }

    private void setearModeloTablas() {
        modeloProcesosListos = new DefaultTableModel();
        modeloProcesosListos.addColumn("ID");
        modeloProcesosListos.addColumn("Proceso");
        modeloProcesosBloqueados = new DefaultTableModel();
        modeloProcesosBloqueados.addColumn("ID");
        modeloProcesosBloqueados.addColumn("Proceso");

        this.tablaListos.setModel(modeloProcesosListos);
        this.tablaBloqueados.setModel(modeloProcesosBloqueados);
    }

    public void cargarTablas() {
        cargarTablaListos();
        cargarTablaBloqueados();
    }

    public void cargarMemoria() {
        StringBuilder texto = new StringBuilder();
        Hardware hardware = Hardware.getInstance();
        int totalRam = hardware.GetRAMSize();
        int usoMemoria = scheduler.GetMemoryUsage();
        int por = (usoMemoria*100)/totalRam;
        texto.append(String.valueOf(por));
        texto.append("%"); 
        this.txtMemoria.setText(texto.toString());
    }

    private void cargarTablaListos() {
        vaciarTablaProcesosListos();
        String[] texto = new String[2];
        LinkedList listos = scheduler.GetReadyQueue();
        for (Object proceso : listos) {
            ProcessDetail process = (ProcessDetail) proceso;
            texto[0] = String.valueOf(process.PID);
            texto[1] = String.valueOf(process.Name);
            modeloProcesosListos.addRow(texto);
        }
        modeloProcesosListos.fireTableDataChanged();
    }

    private void vaciarTablaProcesosListos() {
        for (int i = 0; i < tablaListos.getRowCount(); i++) {
            modeloProcesosListos.removeRow(i);
            i -= 1;
        }
    }

    private void cargarTablaBloqueados() {
        vaciarTablaProcesosBloqueados();
        String[] texto = new String[2];
        LinkedList bloqueados = scheduler.GetBlockedProcesses();
        for (Object proceso : bloqueados) {
            ProcessDetail process = (ProcessDetail) proceso;
            texto[0] = String.valueOf(process.PID);
            texto[1] = String.valueOf(process.Name);
            modeloProcesosBloqueados.addRow(texto);
        }
        modeloProcesosBloqueados.fireTableDataChanged();
    }

    private void vaciarTablaProcesosBloqueados() {
        for (int i = 0; i < tablaBloqueados.getRowCount(); i++) {
            modeloProcesosBloqueados.removeRow(i);
            i -= 1;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu dashboardMenu;
    private javax.swing.JMenu estadisticasMenu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tablaBloqueados;
    private javax.swing.JTable tablaListos;
    private javax.swing.JLabel txtMemoria;
    // End of variables declaration//GEN-END:variables
}
